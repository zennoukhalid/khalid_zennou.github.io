{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","comps/Contact.js","comps/NavBar.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","className","map","div","key","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","transition","delay","scale","whileTap","Modal","selectedImg","e","target","classList","contains","y","useStorage","file","progress","setprogress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","type","onChange","selected","files","includes","Contact","noValidate","TextField","variant","margin","required","fullWidth","label","autoComplete","autoFocus","multiline","rows","Button","color","style","marginTop","paddingTop","NavBar","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","React","setValue","DialogContent","dividers","AppBar","position","Tabs","event","newValue","scrollButtons","indicatorColor","textColor","aria-label","Tab","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17a0f26d.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD3MYodMbA1mY2Kkh6uUf1JPM9iTzifNqo\",\r\n    authDomain: \"ninja-firegrame.firebaseapp.com\",\r\n    databaseURL: \"https://ninja-firegrame.firebaseio.com\",\r\n    projectId: \"ninja-firegrame\",\r\n    storageBucket: \"ninja-firegrame.appspot.com\",\r\n    messagingSenderId: \"702993921674\",\r\n    appId: \"1:702993921674:web:439aab36997313078a5f73\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  export{ projectStorage,projectFirestore,timestamp};","//const { useEffect, useState } = require(\"react\");\r\n\r\nimport {useEffect, useState} from 'react';\r\nimport {projectFirestore} from '../firebase/config';\r\n\r\n\r\nconst useFirestore = (collection)=>{\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n       const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt', 'desc')\r\n        .onSnapshot((snap)=>{\r\n            let documents = [];\r\n            snap.forEach(doc =>{\r\n                documents.push({...doc.data(), id: doc.id })\r\n            });\r\n            setDocs(documents)\r\n        });\r\n        return ()=> unsub();\r\n\r\n    }, [collection])\r\n    return { docs };\r\n}\r\nexport default useFirestore;\r\n","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst ImageGrid = ({setSelectedImg})=>{\r\n    const {docs} = useFirestore('images');\r\n    console.log(docs);\r\n    return(\r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc =>(\r\n                <motion.div className=\"img-wrap\" key={doc.id}\r\n                layout\r\n                whileHover={{opacity: 1}}\r\n                onClick = {\r\n                    ()=> setSelectedImg(doc.url)\r\n                }>\r\n                    <motion.img src={doc.url} alt=\"upload pic\"\r\n                    initial={{opacity: 0 }}\r\n                    animate={{opacity: 1 }}\r\n                    transition={{delay: 1 }}\r\n                    whileHover={{ scale: 1.2 }}\r\n                    whileTap={{ scale: 1 }} \r\n                    />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default ImageGrid;","import React from 'react';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg })=>{\r\n    const handelClick = (e)=>{\r\n        if(e.target.classList.contains('backdrop')){\r\n           setSelectedImg(null); \r\n        }\r\n        \r\n    }\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handelClick}>\r\n            <motion.img src={selectedImg} alt=\"enlarged pic\"\r\n            initial={{ y: \"-100vh\"}}\r\n            animate={{ y: 0}}\r\n            />\r\n        </motion.div>\r\n    )\r\n}\r\nexport default Modal;","import {useState, useEffect} from 'react';\r\nimport {projectStorage, projectFirestore, timestamp} from '../firebase/config';\r\n\r\nconst useStorage = (file)=>{\r\n    const [progress, setprogress] = useState(0)\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null); \r\n\r\n    useEffect(() => {\r\n       const storageRef  = projectStorage.ref(file.name);\r\n       const collectionRef = projectFirestore.collection('images');\r\n\r\n       storageRef.put(file).on('state_changed', (snap)=>{\r\n           let percentage = (snap.bytesTransferred/snap.totalBytes)*100;\r\n           setprogress(percentage);\r\n       },(err)=>{\r\n           setError(err);\r\n       }, async ()=>{\r\n           const url = await storageRef.getDownloadURL();\r\n           const createdAt= timestamp();\r\n           collectionRef.add({url, createdAt})\r\n           setUrl(url);\r\n       })\r\n    }, [file]);\r\n\r\n    return { progress, url, error}\r\n\r\n}\r\nexport default useStorage;","import React,{useEffect} from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst ProgressBar = ({file, setFile})=>{\r\n    const {url, progress} = useStorage(file);\r\n\r\n    useEffect(() => {\r\n        if(url){\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile])\r\n    console.log(progress, url);\r\n    return (\r\n        <motion.div className=\"progress-bar\" \r\n        initial={{width: 0 }}\r\n        animate={{width: progress + '%'}}\r\n\r\n        ></motion.div>\r\n    )\r\n}\r\nexport default ProgressBar;","import React, {useState} from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () =>{\r\n     const [file, setFile] = useState(null);\r\n     const [error, setError] = useState(null);\r\n\r\n     const types= ['image/png','image/jpeg'];\r\n\r\n    const changeHandler =(e)=>{\r\n        let selected = e.target.files[0];\r\n        \r\n        if(selected && types.includes(selected.type)){\r\n            setFile(selected);\r\n            setError('');\r\n        }else{\r\n            setFile(null);\r\n            setError('please select an image file (png, jpeg)');\r\n        }\r\n    }\r\n    return(\r\n        <form>\r\n            <label className=\"add\">\r\n                <span>+</span>\r\n                <input type=\"file\" onChange={changeHandler} />\r\n            </label>\r\n            \r\n            <div className=\"output\">\r\n                {error && <div className=\"error\" >{error}</div>} \r\n                {file && <div>{file.name}</div>}\r\n                { file && <ProgressBar file={file} setFile={setFile}/>}\r\n            </div>\r\n          \r\n        </form>\r\n    )\r\n}\r\nexport default UploadForm;","import { Button, TextField } from '@material-ui/core';\r\nimport { Label } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nconst Contact =() =>{\r\n\r\n    return(\r\n        <div>\r\n           <form noValidate >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            // value={this.state.email}\r\n                            // onChange={this.onChangeEmail}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"Name\"\r\n                            label=\"Name\"\r\n                            type=\"Name\"\r\n                            id=\"Name\"\r\n                            autoComplete=\"current-Name\"\r\n                            // value={this.state.Name}\r\n                            // onChange={this.onChangeName}\r\n                        />\r\n\r\n                         <TextField\r\n                             id=\"outlined-multiline-static\"\r\n                             label=\"Multiline\"\r\n                             margin=\"normal\"\r\n                             multiline\r\n                             fullWidth\r\n                             rows={4}\r\n                             label=\"Email Address\"\r\n                             variant=\"outlined\"\r\n                            // value={this.state.Sujet}\r\n                            // onChange={this.onChangeSujet}\r\n                        />\r\n\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            // onClick={this.submit}\r\n                            style={{ marginTop: 40, paddingTop: 12 }}\r\n                        >\r\n                            <h4>Envoyer</h4>\r\n                        </Button>\r\n                    </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Contact;\r\n","import { AppBar, DialogContent, Tabs,TabPanel, Box, Typography, Tab } from '@material-ui/core';\r\nimport React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGrid from './ImageGrid';\r\nimport Modal from './Modal';\r\nimport UploadForm from './UploadForm';\r\nimport Contact from './Contact';\r\n\r\nconst NavBar = () => {\r\n    const [selectedImg, setSelectedImg] = useState(null);\r\n    \r\n    function TabPanel(props) {\r\n        const { children, value, index, ...other } = props;\r\n      \r\n        return (\r\n          <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n          >\r\n            {value === index && (\r\n              <Box p={3}>\r\n                <Typography>{children}</Typography>\r\n              </Box>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n      TabPanel.propTypes = {\r\n        children: PropTypes.node,\r\n        index: PropTypes.any.isRequired,\r\n        value: PropTypes.any.isRequired,\r\n      };\r\n      function a11yProps(index) {\r\n        return {\r\n          id: `scrollable-force-tab-${index}`,\r\n          'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n        };\r\n      }\r\n      const [value, setValue] = React.useState(0);\r\n      const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n      };\r\n    return (\r\n      <div className=\"navbar\">\r\n       <DialogContent dividers>\r\n            <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"on\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            aria-label=\"scrollable force tabs example\"\r\n            >\r\n            <Tab label=\"Galogie\"  {...a11yProps(0)} />\r\n            <Tab label=\"About\"  {...a11yProps(1)} />\r\n            <Tab label=\"Contact\"  {...a11yProps(2)} />\r\n            <Tab label=\"Helps\"  {...a11yProps(3)} />\r\n            </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={value} index={0}>\r\n             <UploadForm/>\r\n            <ImageGrid setSelectedImg={setSelectedImg}/>\r\n            {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/>}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n            second tab\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2}>\r\n            <Contact/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3}>\r\n           fourdth tab\r\n        </TabPanel>\r\n        </DialogContent>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default NavBar;\r\n\r\n","import React, {useState} from 'react';\r\nimport ImageGrid from './comps/ImageGrid';\r\nimport Modal from './comps/Modal';\r\nimport NavBar from './comps/NavBar';\r\nimport Title from './comps/Title';\r\nimport UploadForm from './comps/UploadForm';\r\n\r\nfunction App() {\r\n  const [selectedImg, setSelectedImg] = useState(null);\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar/>\r\n      {/* <Title/>\r\n      <UploadForm/>\r\n      <ImageGrid setSelectedImg={setSelectedImg} />\r\n      {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/>} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}